[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.friendly_name}}"
authors = ["{{cookiecutter.author}} <{{cookiecutter.email}}>"]
license = "{{cookiecutter.license}}"
readme = "README.md"
homepage = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
repository = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}"
documentation = "https://{{cookiecutter.project_name}}.readthedocs.io"
{% if cookiecutter.package_name != cookiecutter.project_name.replace('-', '_') -%}
packages = [
    { include = "{{cookiecutter.package_name}}", from = "src" },
]
{% endif -%}
classifiers = [
    "{{cookiecutter.development_status}}",
]

[tool.poetry.urls]
Changelog = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.project_name}}/releases"

[tool.poetry.dependencies]
python = "^3.7"
click = ">=8.0.1"

[tool.poetry.group.dev.dependencies]
Pygments = ">=2.10.0"
bandit = ">=1.7.4"
black = ">=23.3.0"
ruff = ">=0.0.261"
coverage = {extras = ["toml"], version = ">=6.2"}
flake8 = ">=4.0.1"
flake8-bugbear = ">=21.9.2"
flake8-docstrings = ">=1.6.0"
flake8-rst-docstrings = ">=0.2.5"
furo = ">=2021.11.12"
isort = ">=5.10.1"
mypy = ">=0.930"
nox = ">=2022.11.21"
nox-poetry = ">=1.0.2"
pep8-naming = ">=0.12.1"
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
pytest = ">=7.2.1"
pyupgrade = ">=2.29.1"
safety = ">=1.10.3"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"
xdoctest = {extras = ["colors"], version = ">=0.15.10"}
myst-parser = {version = ">=0.16.1"}

{% if cookiecutter.cli -%}
[tool.poetry.scripts]
{{cookiecutter.project_name}} = "{{cookiecutter.package_name}}.__main__:main"
{%- endif %}

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "--cache-clear",
  "--cov={{ cookiecutter.project_name }}",
  "--cov-report",
  "html:coverage-html",
  "--cov-report",
  "term",
]
python_files = ["tests/test_*.py", "tests/**/test_*.py"]
junit_logging = "all"
junit_log_passing_tests = true
junit_suite_name = "{{ cookiecutter.project_name }}"
log_cli = true
log_cli_level = "WARNING"
log_auto_indent = true
log_date_format = "%Y-%m-%d %H:%M:%S"
log_file = "pytest-log.log"
log_file_level = "INFO"
log_format = "[%(asctime)s] %(name)s %(levelname)s %(funcName)s: %(message)s"
minversion = "7.2.1"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.package_name}}", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100

[tool.isort]
profile = "black"
skip = [".tox", "venv", ".venv"]
combine_as_imports = true
group_by_package = true
default_section = "THIRDPARTY"
known_first_party = ["{{ cookiecutter.package_name}}"]
{% if cookiecutter.cli -%} known_click = ["click"] {%- endif %}
known_tests = ["tests"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
sections = [
  "FUTURE",
  "STDLIB",
  "THIRDPARTY",
{%- if cookiecutter.cli %}
   "CLICK",
{%- endif %}
  "FIRSTPARTY",
  "TESTS",
  "LOCALFOLDER",
]

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true
error_summary=true
python_version=3.7

mypy_path="src"

follow_imports="normal"

disallow_untyped_calls=true
warn_return_any=true
strict_optional=true
warn_no_return=true
warn_redundant_casts=true
warn_unused_ignores=true
warn_unused_configs=true
disallow_any_generics=true

disallow_untyped_defs=true
check_untyped_defs=true

[tool.bandit]
targets = ["src"]

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    # "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
target-version = "py37"
ignore-init-module-imports = true
show-fixes=true
src = ["src"]
task-tags = ["TODO", "FIXME", "XXX", "NOTE"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-first-party = ["{{ cookiecutter.package_name }}"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
